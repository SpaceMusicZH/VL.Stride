[Category("Filter.Experimental")]
[Summary("")]
[WantsMips("Texture0")]
shader Blur_TextureFX : FilterBase
{
    stage float Strength = 0.25;

    [Default(1.0)]
    compose ComputeFloat StrengthMap;

    float4 Filter(float4 tex0col)
    {
        float2 R = ViewSize;
        float map = StrengthMap.Compute();
        float lod = map * Strength * log2(max(R.x, R.y));
        float4 c = 0;
        float2 x = streams.TexCoord;
        float2 off = 0.5/R * pow(2, lod) * saturate(lod);
        
        // TODO: Check if this is a correct usage of lod in SampleLevel
        c += Texture0.SampleLevel(Sampler0, x + float2( 0,  0) * off, lod);
        c += Texture0.SampleLevel(Sampler0, x + float2( 1,  1) * off, lod);
        c += Texture0.SampleLevel(Sampler0, x + float2( 1, -1) * off, lod);
        c += Texture0.SampleLevel(Sampler0, x + float2(-1, -1) * off, lod);
        c += Texture0.SampleLevel(Sampler0, x + float2(-1,  1) * off, lod);
        off *= 1.86;
        c += Texture0.SampleLevel(Sampler0, x + float2( 0,  1) * off, lod);
        c += Texture0.SampleLevel(Sampler0, x + float2( 0, -1) * off, lod);
        c += Texture0.SampleLevel(Sampler0, x + float2(-1,  0) * off, lod);
        c += Texture0.SampleLevel(Sampler0, x + float2( 1,  0) * off, lod);
        c /= 9;

        // TODO: Add premultiply
        //if(PreMultiply)c.rgb/=c.a+Epsilon;

        return c;
    }
};



[TextureSource]
[Category("Source.Experimental")]
[Summary("Returns a texture with different choosable noise types")]
shader Noise_TextureFX : TextureFX, HappyNoise
{
    float Scale = 0.25f;
    float2 Offset;
    [EnumType("VL.Stride.Effects.TextureFX.NoiseType")]
    uint Type;

    stage override float4 Shading()
    {
        float2 uv = streams.TexCoord;
        
        switch(Type)
        {
            case 0 : return perlin((uv + Offset) / Scale);
            case 1 : return float4(perlinGrad((uv + Offset) / Scale), 1.0);
            case 2 : return valueNoise((uv + Offset) / Scale);
            case 3 : return float4(valueNoiseGrad((uv + Offset) / Scale), 1.0);
            case 4 : return simplex((uv + Offset) / Scale);
            case 5 : return float4(simplexGrad((uv + Offset) / Scale), 1.0);
            case 6 : return worleyFast((uv + Offset) / Scale);
            case 7 : return float4(worleyFastGrad((uv + Offset) / Scale), 1.0);
        }
        return 0;
    }
};        
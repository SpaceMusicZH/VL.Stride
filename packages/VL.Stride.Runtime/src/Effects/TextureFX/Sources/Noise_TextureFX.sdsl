[Category("Source.Experimental")]
[Summary("Returns a texture with different choosable noise types")]
shader Noise_TextureFX : TextureFX
{
    float Scale = 1.0f;
    float2 Offset;
    [EnumType("VL.Stride.Effects.TextureFX.NoiseType")]
    int Type;

    // TODO: More advanced noise generation?
    compose HappyNoise happyNoise;

    stage override float4 Shading()
    {
        float2 uv = streams.TexCoord;
        
        if (Type == 0) return happyNoise.perlin((uv + Offset) / Scale);
        else if (Type == 1) return float4(happyNoise.perlinGrad((uv + Offset) / Scale), 1.0);
        else if (Type == 2) return happyNoise.valueNoise((uv + Offset) / Scale);
        else if (Type == 3) return float4(happyNoise.valueNoiseGrad((uv + Offset) / Scale), 1.0);
        else if (Type == 4) return happyNoise.simplex((uv + Offset) / Scale);
        else if (Type == 5) return float4(happyNoise.simplexGrad((uv + Offset) / Scale), 1.0);
        else if (Type == 6) return happyNoise.worleyFast((uv + Offset) / Scale);
        else if (Type == 7) return float4(happyNoise.worleyFastGrad((uv + Offset) / Scale), 1.0);
        else return float4(1,0,1,1);
    }
};


        